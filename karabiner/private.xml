<?xml version="1.0"?>
<root>

<!--
    Documentation here:
    https://pqrs.org/macosx/keyremap4macbook/xml.html.en
-->

<!-- This sets an alias for Atom so I can refer to it later -->
<appdef>
  <appname>XCODE</appname>
  <equal>com.apple.dt.Xcode</equal>
</appdef>

<!-- This sets an alias for Atom so I can refer to it later -->
<appdef>
  <appname>ATOM</appname>
  <equal>com.github.atom</equal>
</appdef>

<!-- This sets an alias for iTerm2 so I can refer to it later -->
<appdef>
  <appname>ITERM</appname>
  <equal>com.googlecode.iterm2</equal>
</appdef>

<!-- This sets an alias for iTerm2 so I can refer to it later -->
<appdef>
  <appname>MACVIM</appname>
  <equal>org.vim.MacVim</equal>
</appdef>

<!-- =============================================================== -->

<item>
  <name>Remap Option_R to Hyper</name>
  <appendix>This maps the Right Option key to Control + Shift + Option + Command.</appendix>
  <identifier>space_cadet.left_control_to_hyper</identifier>
  <autogen>
    --KeyToKey--
    KeyCode::OPTION_R,
    KeyCode::COMMAND_L, ModifierFlag::OPTION_L | ModifierFlag::SHIFT_R | ModifierFlag::CONTROL_R
  </autogen>
</item>

<item>
  <name>Remap Control_L to F5</name>
  <appendix>When you type Control_L only, send F5 - exclude iTerm, Atom, MacVim</appendix>
  <identifier>private.controlL2controlL_f5</identifier>
  <not>ITERM, ATOM, MACVIM</not>
  <autogen>
    __KeyOverlaidModifier__
    KeyCode::CONTROL_L, KeyCode::CONTROL_L,
    KeyCode::F5
  </autogen>
</item>

<item>
  <name>Remap Control_L to Escape</name>
  <appendix>Active in iTerm, Atom, MacVim</appendix>
  <identifier>private.itermEscape</identifier>
  <only>ITERM, ATOM, MACVIM</only>
  <autogen>
    __KeyOverlaidModifier__
    KeyCode::CONTROL_L, KeyCode::CONTROL_L,
    KeyCode::ESCAPE
  </autogen>
</item>

<item>
  <name>Remap Control+N to Down</name>
  <appendix>Control+N sends Down Arrow</appendix>
  <identifier>private.CNDown</identifier>

  <autogen>
    __KeyToKey__
    KeyCode::N, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
    KeyCode::CURSOR_DOWN
  </autogen>
</item>

<item>
  <name>Remap Control+P to Up</name>
  <appendix>Control+P sends Up Arrow</appendix>
  <identifier>private.CPUp</identifier>

  <autogen>
    __KeyToKey__
    KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
    KeyCode::CURSOR_UP
  </autogen>
</item>
<item>
  <name>Remap Control+N to Down in Xcode</name>
  <appendix>Active in Xcode</appendix>
  <identifier>private.xcodeNDown</identifier>
  <only>XCODE</only>

  <autogen>
    __KeyToKey__
    KeyCode::N, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
    KeyCode::CURSOR_DOWN
  </autogen>
</item>

<item>
  <name>Remap Control+P to Up in Xcode</name>
  <appendix>Active in Xcode</appendix>
  <identifier>private.xcodePUp</identifier>
  <only>XCODE</only>

  <autogen>
    __KeyToKey__
    KeyCode::P, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
    KeyCode::CURSOR_UP
  </autogen>
</item>

<item>
  <name>Remap Control+J to Down in Xcode</name>
  <appendix>Active in Xcode</appendix>
  <identifier>private.xcodeJDown</identifier>
  <only>XCODE</only>

  <autogen>
    __KeyToKey__
    KeyCode::J, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
    KeyCode::CURSOR_DOWN
  </autogen>
</item>

<item>
  <name>Remap Control+K to Up in Xcode</name>
  <appendix>Active in Xcode</appendix>
  <identifier>private.xcodeKUp</identifier>
  <only>XCODE</only>

  <autogen>
    __KeyToKey__
    KeyCode::K, MODIFIERFLAG_EITHER_LEFT_OR_RIGHT_CONTROL,
    KeyCode::CURSOR_UP
  </autogen>
</item>

<!-- =============================================================== -->

<item>
  <name>Use the Correct Shift Keys</name>
  <appendix>Forces correct typing by disabling incorrect shift-letter combinations</appendix>
  <identifier>private.correct_shift_keys</identifier>

  <autogen>--KeyToKey-- KeyCode::Q, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::W, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::E, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::R, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::T, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::A, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::S, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::D, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::F, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::G, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::Z, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::X, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::C, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::V, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>

  <autogen>--KeyToKey-- KeyCode::Y,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::U,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::I,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::O,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::P,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::H,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::J,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::K,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::L,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <!--autogen>--KeyToKey-- KeyCode::SEMICOLON, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>-->
  <autogen>--KeyToKey-- KeyCode::QUOTE,     ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::N,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::M,         ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::COMMA,     ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>
  <autogen>--KeyToKey-- KeyCode::DOT,       ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::VK_NONE</autogen>

</item>

<item>
    <name>Shifts to Parentheses</name>
    <appendix>Shifts, when pressed alone, type parentheses.  When used with other keys they're normal shifts.</appendix>

    <identifier>private.shifts_to_parens</identifier>

    <!-- This is the basic mapping. -->
    <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_R | ModifierFlag::NONE, KeyCode::SHIFT_R, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>
    <autogen>--KeyOverlaidModifier-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_L | ModifierFlag::NONE, KeyCode::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_R</autogen>

    <!--
        Remap the "rolls" of () and )( because it's too easy to hit one
        before finishing the other, and there's no other reason to be
        pressing both shift keys at once anyway
    -->
    <autogen>--KeyToKey-- KeyCode::SHIFT_L, ModifierFlag::SHIFT_R, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L</autogen>
    <autogen>--KeyToKey-- KeyCode::SHIFT_R, ModifierFlag::SHIFT_L, KeyCode::KEY_9, ModifierFlag::SHIFT_L, KeyCode::KEY_0, ModifierFlag::SHIFT_L</autogen>

    <!--
        Remap Rshift+Space to ') ', because when typing an end paren and
        then a space I tend to hit space before I let go of rshift.
    -->
    <autogen>--KeyToKey-- KeyCode::SPACE, ModifierFlag::SHIFT_R, KeyCode::KEY_0, ModifierFlag::SHIFT_L, KeyCode::SPACE</autogen>
</item>

</root>
