export ZSH=$HOME/.dotfiles/oh-my-zsh
# Path to your oh-my-zsh configuration.

# Set to the name theme to load.
# Look in ~/.oh-my-zsh/themes/
#export ZSH_THEME="maran"
export ZSH_THEME="risto"

export DISABLE_AUTO_UPDATE="true"

source $ZSH/oh-my-zsh.sh

if [[ -s $HOME/.profile ]] ; then source $HOME/.profile ; fi


# Customize to your needs...
#

# This might need to be moved into a mac-specific file in oh-my-zsh
#stty erase ^H &>/dev/null
bindkey "^?" backward-delete-char
bindkey "^[[3~" delete-char

# usage: bindtc <cap> <fallback> <zsh-command>
bindtc () 
{
  local keyval=$(echotc "$1" 2>&-)
  bindkey "${keyval:-$2}" "$3"
}

findin ()
{
  find . | grep -v .git | grep -v .svn | grep -v "\/log\/" | xargs grep -n $1
}

# Let backtab cycle through completions in reverse
bindtc bt "^[[Z" reverse-menu-complete

# Bindings for PGUP, PGDN, HOME, END
bindtc kP "^[[I" history-beginning-search-backward
bindtc kN "^[[G" history-beginning-search-forward
bindtc kh "^[[H" beginning-of-line
bindtc kH "^[[F" end-of-line

# Bindings for UP, DOWN, LEFT, RIGHT
bindtc ku "^[[A" up-line-or-history
bindtc kd "^[[B" down-line-or-history
bindtc kr "^[[C" forward-char
bindtc kl "^[[D" backward-char

# Emacs style for vi mode
#set -o vi
#bindkey -v # vi mode line editting
#bindkey '^A' beginning-of-line
#bindkey '^E' end-of-line
#bindkey '^K' kill-line
#bindkey '^U' kill-whole-line
#bindkey -M viins '^O' copy-prev-shell-word
#bindkey '^L' push-line # push current command into a buffer, allows you to do another command then returns to previous command

# Directory Bookmarks
alias m1='alias g1="cd `pwd`"'
alias m2='alias g2="cd `pwd`"'
alias m3='alias g3="cd `pwd`"'
alias m4='alias g4="cd `pwd`"'
alias m5='alias g5="cd `pwd`"'
alias m6='alias g6="cd `pwd`"'
alias m7='alias g7="cd `pwd`"'
alias m8='alias g8="cd `pwd`"'
alias m9='alias g9="cd `pwd`"'

function tree {
  find ${1:-.} -print | sed -e 's;[^/]*/;|____;g;s;____|; |;g'
}
# Ruby Version Manager path mangling
if [[ -s $HOME/.rvm/scripts/rvm ]] ; then source $HOME/.rvm/scripts/rvm ; fi
